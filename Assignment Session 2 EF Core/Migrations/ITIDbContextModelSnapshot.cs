// <auto-generated />
using System;
using Assignment_Session_1_EF_Core.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment_Session_2_EF_Core.Migrations
{
    [DbContext(typeof(ITIDbContext))]
    partial class ITIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assignment_Session_1_EF_Core.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VarChar(50)")
                        .HasColumnName("CourseDecription");

                    b.Property<decimal>("Duration")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("CourseDuration");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VarChar(50)")
                        .HasColumnName("CourseName");

                    b.Property<int>("TopicCourseId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("TopicCourseId")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Assignment_Session_1_EF_Core.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("DateTime2")
                        .HasColumnName("StudentHiringDate");

                    b.Property<int>("InstructorDepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("VarChar")
                        .HasColumnName("DepartmentAddress");

                    b.HasKey("Id");

                    b.HasIndex("InstructorDepartmentId")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Assignment_Session_1_EF_Core.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VarChar")
                        .HasColumnName("InstructorAddress");

                    b.Property<decimal>("Bouns")
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("InstructorBouns");

                    b.Property<decimal>("HourRate")
                        .HasColumnType("decimal(17,2)")
                        .HasColumnName("InstructorHourRate");

                    b.Property<int>("InstDeptID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VarChar")
                        .HasColumnName("InstructorName");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("InstructorSalary");

                    b.HasKey("Id");

                    b.HasIndex("InstDeptID");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("Assignment_Session_1_EF_Core.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VarChar")
                        .HasColumnName("StudentAddress");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VarChar")
                        .HasColumnName("StudentFirstName");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VarChar")
                        .HasColumnName("StudentLastName");

                    b.Property<int>("StuddntDepartmentID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StuddntDepartmentID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Assignment_Session_1_EF_Core.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VarChar")
                        .HasColumnName("TopicNmae");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Assignment_Session_1_EF_Core.Models.Course", b =>
                {
                    b.HasOne("Assignment_Session_1_EF_Core.Models.Topic", "CourseTopic")
                        .WithOne("TopicCourse")
                        .HasForeignKey("Assignment_Session_1_EF_Core.Models.Course", "TopicCourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CourseTopic");
                });

            modelBuilder.Entity("Assignment_Session_1_EF_Core.Models.Department", b =>
                {
                    b.HasOne("Assignment_Session_1_EF_Core.Models.Instructor", "ManagesInstructors")
                        .WithOne("ManagesInstDept")
                        .HasForeignKey("Assignment_Session_1_EF_Core.Models.Department", "InstructorDepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ManagesInstructors");
                });

            modelBuilder.Entity("Assignment_Session_1_EF_Core.Models.Instructor", b =>
                {
                    b.HasOne("Assignment_Session_1_EF_Core.Models.Department", "WorksInInstructorDepartment")
                        .WithMany("WorksInInstrucotrs")
                        .HasForeignKey("InstDeptID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WorksInInstructorDepartment");
                });

            modelBuilder.Entity("Assignment_Session_1_EF_Core.Models.Student", b =>
                {
                    b.HasOne("Assignment_Session_1_EF_Core.Models.Department", "StudentDepartment")
                        .WithMany("Students")
                        .HasForeignKey("StuddntDepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("StudentDepartment");
                });

            modelBuilder.Entity("Assignment_Session_1_EF_Core.Models.Department", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("WorksInInstrucotrs");
                });

            modelBuilder.Entity("Assignment_Session_1_EF_Core.Models.Instructor", b =>
                {
                    b.Navigation("ManagesInstDept");
                });

            modelBuilder.Entity("Assignment_Session_1_EF_Core.Models.Topic", b =>
                {
                    b.Navigation("TopicCourse");
                });
#pragma warning restore 612, 618
        }
    }
}
